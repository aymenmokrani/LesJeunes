{
  "src": {
    "app": {
      "_comment": "App Router (Next.js 13+)",
      "(auth)": {
        "_comment": "Route groups",
        "login": {
          "page.tsx": {},
          "loading.tsx": {}
        },
        "register": {
          "page.tsx": {},
          "loading.tsx": {}
        },
        "layout.tsx": {}
      },
      "(dashboard)": {
        "files": {
          "page.tsx": {},
          "loading.tsx": {},
          "[id]": {
            "page.tsx": {},
            "loading.tsx": {}
          }
        },
        "settings": {
          "page.tsx": {},
          "loading.tsx": {}
        },
        "layout.tsx": {}
      },
      "api": {
        "_comment": "API routes (if Next.js is backend)",
        "auth": {},
        "upload": {}
      },
      "globals.css": {},
      "layout.tsx": {
        "_comment": "Root layout with Redux Provider"
      },
      "page.tsx": {},
      "loading.tsx": {},
      "error.tsx": {}
    },
    "components": {
      "_comment": "Reusable UI components",
      "ui": {
        "_comment": "Base components (shadcn/ui style)",
        "button.tsx": {},
        "input.tsx": {},
        "modal.tsx": {},
        "toast.tsx": {},
        "loading-spinner.tsx": {}
      },
      "forms": {
        "_comment": "Form components",
        "LoginForm.tsx": {},
        "FileUploadForm.tsx": {},
        "SearchForm.tsx": {}
      },
      "layout": {
        "_comment": "Layout components",
        "Header.tsx": {},
        "Sidebar.tsx": {},
        "Footer.tsx": {},
        "Navigation.tsx": {}
      },
      "features": {
        "_comment": "Feature-specific components",
        "files": {
          "FileList.tsx": {},
          "FileCard.tsx": {},
          "FileUpload.tsx": {},
          "FilePreview.tsx": {},
          "FileBreadcrumb.tsx": {},
          "FileActions.tsx": {}
        },
        "auth": {
          "LoginButton.tsx": {},
          "UserProfile.tsx": {},
          "ProtectedRoute.tsx": {}
        },
        "dashboard": {
          "StatsCard.tsx": {},
          "RecentFiles.tsx": {},
          "QuickActions.tsx": {}
        }
      },
      "providers": {
        "_comment": "Context providers",
        "ReduxProvider.tsx": {},
        "ThemeProvider.tsx": {},
        "AuthProvider.tsx": {}
      }
    },
    "stores": {
      "_comment": "Redux store (replaces previous hooks/)",
      "store.ts": {
        "_comment": "Main store configuration"
      },
      "rootReducer.ts": {
        "_comment": "Root reducer"
      },
      "middleware.ts": {
        "_comment": "Custom middleware"
      },
      "files": {
        "_comment": "Files feature store",
        "filesSlice.ts": {},
        "filesThunks.ts": {},
        "filesSelectors.ts": {},
        "types.ts": {}
      },
      "auth": {
        "_comment": "Auth feature store",
        "authSlice.ts": {},
        "authThunks.ts": {},
        "authSelectors.ts": {},
        "types.ts": {}
      },
      "ui": {
        "_comment": "UI state store",
        "uiSlice.ts": {},
        "uiSelectors.ts": {},
        "types.ts": {}
      },
      "settings": {
        "_comment": "Settings store",
        "settingsSlice.ts": {},
        "settingsThunks.ts": {},
        "types.ts": {}
      }
    },
    "hooks": {
      "_comment": "Custom React hooks (Redux-focused)",
      "redux": {
        "_comment": "Redux utility hooks",
        "useAppDispatch.ts": {},
        "useAppSelector.ts": {},
        "useReduxState.ts": {}
      },
      "files": {
        "_comment": "File-specific hooks",
        "useFiles.ts": {},
        "useFileSearch.ts": {},
        "useFileUpload.ts": {},
        "useFileActions.ts": {}
      },
      "auth": {
        "_comment": "Auth hooks",
        "useAuth.ts": {},
        "usePermissions.ts": {},
        "useSession.ts": {}
      },
      "ui": {
        "_comment": "UI hooks",
        "useToast.ts": {},
        "useModal.ts": {},
        "useTheme.ts": {}
      },
      "common": {
        "_comment": "Generic hooks",
        "useDebounce.ts": {},
        "useLocalStorage.ts": {},
        "usePagination.ts": {}
      }
    },
    "services": {
      "_comment": "Business logic layer",
      "files": {
        "fileService.ts": {},
        "fileTransform.ts": {},
        "fileValidation.ts": {},
        "uploadService.ts": {}
      },
      "auth": {
        "authService.ts": {},
        "tokenService.ts": {},
        "permissionService.ts": {}
      },
      "analytics": {
        "trackingService.ts": {},
        "metricsService.ts": {}
      },
      "notification": {
        "notificationService.ts": {},
        "emailService.ts": {}
      }
    },
    "lib": {
      "_comment": "Utilities & configurations",
      "api": {
        "_comment": "API client layer",
        "client.ts": {
          "_comment": "Base API client (axios/fetch)"
        },
        "interceptors.ts": {},
        "endpoints.ts": {
          "_comment": "API endpoint constants"
        },
        "files": {
          "filesApi.ts": {},
          "uploadApi.ts": {}
        },
        "auth": {
          "authApi.ts": {}
        },
        "types": {
          "files.types.ts": {},
          "responses.ts": {}
        }
      },
      "redux": {
        "_comment": "Redux utilities",
        "createAppAsyncThunk.ts": {},
        "apiStateHelpers.ts": {},
        "persistConfig.ts": {},
        "devtools.ts": {}
      },
      "utils": {
        "_comment": "Helper functions",
        "formatters.ts": {},
        "validators.ts": {},
        "constants.ts": {},
        "errorHandlers.ts": {},
        "dateUtils.ts": {}
      },
      "validations": {
        "_comment": "Zod schemas",
        "fileSchemas.ts": {},
        "authSchemas.ts": {},
        "commonSchemas.ts": {}
      },
      "auth": {
        "_comment": "Authentication logic",
        "config.ts": {},
        "providers.ts": {},
        "middleware.ts": {}
      },
      "monitoring": {
        "_comment": "Error tracking & analytics",
        "sentry.ts": {},
        "analytics.ts": {},
        "logger.ts": {}
      }
    },
    "types": {
      "_comment": "TypeScript definitions",
      "global.d.ts": {
        "_comment": "Global type declarations"
      },
      "files.types.ts": {
        "_comment": "API response types"
      },
      "file.types.ts": {
        "_comment": "File-related types"
      },
      "auth.types.ts": {
        "_comment": "Authentication types"
      },
      "ui.types.ts": {
        "_comment": "UI component types"
      },
      "redux.types.ts": {
        "_comment": "Redux-specific types"
      }
    },
    "styles": {
      "_comment": "Global styles",
      "globals.css": {},
      "components.css": {},
      "themes": {
        "light.css": {},
        "dark.css": {}
      }
    },
    "middleware.ts": {
      "_comment": "Next.js middleware"
    },
    "next.config.js": {},
    "tailwind.config.js": {},
    "tsconfig.json": {},
    "package.json": {}
  }
}
